import React, { Component } from 'react';
import {
  SafeAreaView,
  StyleSheet,
  ImageBackground,
  InteractionManager,
  LayoutAnimation,
  KeyboardAvoidingView,
  ScrollView,
  Keyboard,
} from 'react-native';
import { connect } from 'react-redux';

import Logo from 'components/Logo';
import Form from 'components/Form';
import { SignIn } from 'reduxStore/actions/app';
import { isIos } from 'utils';

const URL = 'https://www.toptal.com/designers/subtlepatterns/patterns/email-pattern.png';

const formFields = [
  {
    name: 'username',
    label: 'Username',
    type: 'text',
    inputProps: {
      autoCapitalize: 'none',
      textContentType: 'nickname',
    },
  },
  {
    name: 'password',
    label: 'Password',
    type: 'text',
    inputProps: {
      secureTextEntry: true,
      textContentType: 'password',
    },
  },
];

class LogIn extends Component {
  static navigationOptions = {
    header: null,
  };

  state = {
    loaded: false,
  };

  componentDidMount(): void {
    InteractionManager.runAfterInteractions(() => {
      LayoutAnimation.easeInEaseOut();
      this.setState({ loaded: true });
    });

    if (!isIos) {
      this.listeners = [
        Keyboard.addListener(
          'keyboardDidShow',
          () => LayoutAnimation.easeInEaseOut(),
        ),
        Keyboard.addListener(
          'keyboardDidHide',
          () => LayoutAnimation.easeInEaseOut(),
        ),
      ];
    }
  }

  componentWillUnmount() {
    if (!isIos && this.listeners) this.listeners.forEach(el => el.remove());
  }

  render() {
    const { fetching } = this.props;

    return (
      <ImageBackground
        source={{ uri: URL }}
        style={styles.backgroundWrapper}
        resizeMode="repeat"
      >
        <SafeAreaView style={styles.flex}>
          <KeyboardAvoidingView
            style={styles.flex}
            behavior={'padding'}
          >
            <ScrollView
              contentContainerStyle={styles.wrapper}
              keyboardShouldPersistTaps={'handled'}
            >
              <Logo text="GitHub API" size={42} animated />

              <Form
                fields={formFields}
                style={styles.formWrapper}
                loaded={this.state.loaded}
                fetching={fetching}
                submitBtnTitle="Submit"
                handleSubmit={this.props.handleSubmit}
              />
            </ScrollView>
          </KeyboardAvoidingView>
        </SafeAreaView>
      </ImageBackground>
    );
  }
}

export default connect(
  state => ({
    fetching: state.app.fetching,
  }),
  dispatch => ({
    handleSubmit: data => dispatch(SignIn(data)),
  }),
)(LogIn);

const styles = StyleSheet.create({
  wrapper: {
    flexGrow: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingVertical: 15,
  },
  flex: {
    flex: 1,
  },
  backgroundWrapper: {
    flex: 1,
  },
  formWrapper: {
    paddingTop: 15,
    paddingBottom: 25,
    paddingHorizontal: 20,
    width: '75%',
    backgroundColor: '#fff',
    borderRadius: 10,
    borderWidth: StyleSheet.hairlineWidth,
    borderColor: 'rgba(0, 0, 0, .1)',
    marginVertical: 15,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 3,
    },
    shadowOpacity: 0.1,
    shadowRadius: 8.65,
    elevation: 6,
  },
});
