import React, { Component } from 'react';
import {
  View,
  SafeAreaView,
  StyleSheet,
  InteractionManager,
  LayoutAnimation,
  TouchableOpacity,
  StatusBar,
} from 'react-native';
import { WebView } from 'react-native-webview';
import AntDesign from 'react-native-vector-icons/AntDesign';
import * as Animatable from 'react-native-animatable';
import { BlurView } from '@react-native-community/blur';
import { isIos } from 'utils';

class Modal extends Component {
  static navigationOptions = {
    header: null,
  };

  state = {
    loaded: false,
    ready: false,
  };

  componentDidMount() {
    InteractionManager.runAfterInteractions(() => {
      StatusBar.setBarStyle('light-content');
      if (!isIos) StatusBar.setBackgroundColor('#000');

      setTimeout(() => {
        requestAnimationFrame(() => this.setState({ loaded: true }));
      }, 500);
    });
  }

  componentWillUnmount() {
    StatusBar.setBarStyle('dark-content', true);
    if (!isIos) StatusBar.setBackgroundColor('#fff', true);
  }

  _handleOnLoad = () => {
    requestAnimationFrame(() => {
      LayoutAnimation.easeInEaseOut();
      this.setState({ ready: true });
    });
  };

  _handleOnError = ({ nativeEvent }) => {
    console.warn('WebView error: ', nativeEvent);
  };

  _handlePress = () => this.props.navigation.goBack(null);

  render() {
    const uri = this.props.navigation.getParam('url');
    const { loaded, ready } = this.state;

    return (
      <SafeAreaView style={styles.wrapper}>
        {isIos && <BlurView style={StyleSheet.absoluteFill} blurType="dark" blurAmount={5} />}
        {loaded && (
          <Animatable.View
            useNativeDriver
            animation="fadeInUp"
            style={[styles.contentWrapper, ready && { height: '75%' }]}
          >
            <TouchableOpacity style={styles.close} activeOpacity={0.8} onPress={this._handlePress}>
              <AntDesign name="closecircle" size={30} color="#007AFF" />
            </TouchableOpacity>
            <View style={styles.innerWrapper}>
              <WebView
                source={{ uri }}
                startInLoadingState={true}
                onLoadEnd={this._handleOnLoad}
                onError={this._handleOnError}
              />
            </View>
          </Animatable.View>
        )}
      </SafeAreaView>
    );
  }
}

export default Modal;

const styles = StyleSheet.create({
  wrapper: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  close: {
    position: 'absolute',
    zIndex: 5,
    top: -15,
    right: -10,
    backgroundColor: '#fff',
    borderRadius: 15,
    shadowColor: '#007AFF',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.5,
    shadowRadius: 6,
    // elevation: 2,
  },
  contentWrapper: {
    width: '85%',
    height: '15%',
    backgroundColor: '#fff',
    borderRadius: 8,
    elevation: 3,
    borderWidth: StyleSheet.hairlineWidth,
    borderColor: 'rgba(0, 0, 0, .7)',
  },
  innerWrapper: {
    borderRadius: 8,
    overflow: 'hidden',
    flex: 1,
  },
});
