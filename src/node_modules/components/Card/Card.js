import React, { Component } from 'react';
import {
  View, StyleSheet, Text, TouchableWithoutFeedback,
} from 'react-native';
import AntDesign from 'react-native-vector-icons/AntDesign';
import * as Animatable from 'react-native-animatable';

import Avatar from 'components/Avatar';

class Card extends Component {
  shouldComponentUpdate(nextProps, nextState) {
    return (
      nextProps.full_name !== this.props.full_name
      || nextProps.description !== this.props.description
      || nextProps.forks_count !== this.props.forks_count
      || nextProps.stargazers_count !== this.props.stargazers_count
      || nextProps.owner.avatar_url !== this.props.owner.avatar_url
      || nextState.scale !== this.state.scale
    );
  }

  state = {
    scale: 1,
  };

  _handlePressIn = () => this.setState({ scale: 0.97 });

  _handlePressOut = () => this.setState({ scale: 1 });

  render() {
    const {
      full_name,
      description,
      forks_count,
      stargazers_count,
      owner,
    } = this.props;

    const { scale } = this.state;

    return (
      <TouchableWithoutFeedback
        onPressIn={this._handlePressIn}
        onPressOut={this._handlePressOut}
        onPress={this.props.onPress}
      >
        <Animatable.View
          style={[styles.wrapper, { scale }]}
          transition={'scale'}
          useNativeDriver
        >
          <View style={styles.container}>
            <View style={styles.left}>
              <Avatar size={52} avatar={owner.avatar_url} />
            </View>
            <View style={styles.body}>
              <View>
                <Text numberOfLines={1} style={styles.title}>
                  {full_name}
                </Text>
              </View>
              <View>
                <Text style={styles.desc} numberOfLines={2}>
                  {description}
                </Text>
              </View>
            </View>
          </View>
          <View style={styles.footer}>
            <View style={[styles.row, styles.infoWrapper]}>
              <View style={[styles.row, styles.av, { marginRight: 7 }]}>
                <AntDesign name="star" size={16} color="#fff" />
                <Text style={styles.footerText}>
                  {stargazers_count.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',')}
                </Text>
              </View>
              <View style={[styles.row, styles.av]}>
                <AntDesign name="fork" size={14} color="#fff" />
                <Text style={styles.footerText}>
                  {forks_count.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',')}
                </Text>
              </View>
            </View>
          </View>
        </Animatable.View>
      </TouchableWithoutFeedback>
    );
  }
}

export default Card;

const styles = StyleSheet.create({
  wrapper: {
    padding: 10,
    marginBottom: 10,
    marginHorizontal: 15,
    backgroundColor: '#fff',
    borderWidth: StyleSheet.hairlineWidth,
    borderColor: 'rgba(0, 0, 0, .2)',
    borderRadius: 10,
  },
  container: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    alignItems: 'center',
  },
  left: {
    marginLeft: -10,
  },
  body: {
    flex: 1,
  },
  row: {
    flexDirection: 'row',
  },
  av: {
    alignItems: 'center',
  },
  title: {
    fontSize: 16,
    color: '#444',
    fontWeight: 'bold',
    marginBottom: 2,
  },
  desc: {
    fontSize: 14,
    color: '#777',
  },
  footer: {
    paddingTop: 8,
    alignItems: 'flex-end',
  },
  infoWrapper: {
    padding: 5,
    backgroundColor: '#007AFF',
    borderRadius: 5,
    borderWidth: StyleSheet.hairlineWidth,
    borderColor: 'rgba(0, 0, 0, .15)',
  },
  footerText: {
    color: 'rgba(255, 255, 255, .75)',
    fontSize: 14,
    marginLeft: 4,
  },
});
