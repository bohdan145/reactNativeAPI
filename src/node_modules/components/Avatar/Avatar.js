import React, { memo, useState } from 'react';
import { View, StyleSheet } from 'react-native';
import PropTypes from 'prop-types';
import FastImage from 'react-native-fast-image';
import * as Animatable from 'react-native-animatable';

const Avatar = memo(({ size = 30, avatar }) => {
  const [loaded, setLoaded] = useState(false);

  if (avatar) {
    return (
      <View
        style={[
          styles.wrapper,
          { width: size, height: size, borderRadius: size / 2 },
        ]}
      >
        <Animatable.View
          style={{ opacity: loaded ? 1 : 0 }}
          useNativeDriver
          transition='opacity'
        >
          <FastImage
            source={{ uri: avatar, priority: FastImage.priority.high }}
            style={[styles.image, { borderRadius: size / 2 }]}
            resizeMode="cover"
            onLoadEnd={() => setLoaded(true)}
          />
        </Animatable.View>
      </View>
    );
  }
  return null;
});

Avatar.propTypes = {
  size: PropTypes.number,
  avatar: PropTypes.string,
};

const styles = StyleSheet.create({
  wrapper: {
    marginHorizontal: 10,
    backgroundColor: '#eee',
    borderWidth: StyleSheet.hairlineWidth,
    borderColor: 'rgba(0, 0, 0, .1)',
  },
  image: {
    width: '100%',
    height: '100%',
  },
});

export default Avatar;
