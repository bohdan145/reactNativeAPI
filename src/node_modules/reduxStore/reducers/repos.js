import { LoadMore, SearchRepo } from 'reduxStore/actions/repos';

const INITIAL_STATE = {
  list: [],
  loading: false,
  fetchingMore: false,
  searchStr: '',
  page: 1,
  itemsCount: 0,
  totalCount: 0,
};

export default (state = INITIAL_STATE, { type, payload }) => {
  switch (type) {
    case SearchRepo.REQUEST: {
      return {
        ...state,
        loading: true,
      };
    }

    case SearchRepo.SUCCESS: {
      const { data, searchStr, totalCount } = payload;
      return {
        ...state,
        list: data,
        page: 2,
        itemsCount: data.length,
        totalCount,
        searchStr,
      };
    }

    case SearchRepo.FULFILL: {
      return {
        ...state,
        loading: false,
      };
    }

    case LoadMore.REQUEST: {
      return {
        ...state,
        fetchingMore: true,
      };
    }

    case LoadMore.SUCCESS: {
      const { data } = payload;
      return {
        ...state,
        list: state.list.concat(data),
        page: state.page + 1,
        itemsCount: state.itemsCount + data.length,
      };
    }

    case LoadMore.FULFILL: {
      return {
        ...state,
        fetchingMore: false,
      };
    }

    default:
      return state;
  }
};
